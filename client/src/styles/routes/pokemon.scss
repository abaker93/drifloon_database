@import '../base/gradients';

@each $type in $types {
	.MuiMenuItem-root {
		&[data-type-one="#{nth($type, 1)}"] {
			&.Mui-selected { background-color: rgba(nth($type, 2), 0.08); }
			.MuiLink-root { color: $text; }
		}
	}
}

#Pokemon {
	@each $type1, $secondTypes in $dualTypes {
		[data-type-one="#{$type1}"] {
			@each $type2, $grad in $secondTypes {
				@if($type2 == '') {
					.MuiContainer-root.typeGradient { background: $grad; }
					.stats .statBarContainer .statBar .statBarFill { background: $grad; }
				} @else {
					&[data-type-two="#{$type2}"] {
						.MuiContainer-root.typeGradient { background: $grad; }
						.stats .statBarContainer .statBar .statBarFill { background: $grad; }
					}
				}
			}
		}
	}

	@each $type in $types {
		[data-type-one="#{nth($type, 1)}"] {
			a, .MuiLink-root { color: #{nth($type, 2)}; }
			.MuiChip-root.selected {
				background: #{nth($type, 2)};
				color: $white;
			}
			
			.MuiCard-root.clickable {
				background: #{nth($type, 2)};

				&:hover, &:focus, &:active {
					box-shadow:
						rgba(nth($type, 2), 0.4) -5px 5px,
						rgba(nth($type, 2), 0.3) -10px 10px,
						rgba(nth($type, 2), 0.2) -15px 15px,
						rgba(nth($type, 2), 0.1) -20px 20px,
						rgba(nth($type, 2), 0.05) -25px 25px;
				}

				&.small {
					&:hover, &:focus, &:active {
						box-shadow:
							rgba(nth($type, 2), 0.4) -5px 5px,
							rgba(nth($type, 2), 0.2) -10px 10px,
							rgba(nth($type, 2), 0.05) -15px 15px;
					}
				}
			}

			.MuiInputLabel-root.Mui-focused { color: #{nth($type, 2)}; }
			.Mui-focused .MuiOutlinedInput-notchedOutline { border-color: #{nth($type, 2)}; }
		}
	}

	header {
		&.scrollHeader {
			p, button { color: $text; }
		}

		p, button {
			transition: all ease-in-out 0.2s;
			color: $white;
		}
		.back { display: block; }
		.title { display: none; }
	}

	.header {
		position: relative;
		padding: 0;
		height: 300px;

		&::after {
			content: '';
			background: url('../../../public/assets/border.svg');
			background-size: cover;
			background-repeat: no-repeat;
			background-position: center;
			width: 100%;
			padding-bottom: 20%;
			display: block;
			position: absolute;
			bottom: 0;
		}

		.MuiBox-root {
			display: grid;
			justify-items: center;
			align-items: center;
			height: 100%;

			img {
				max-width: 250px;
				max-height: 250px;
				position: absolute;
				z-index: 2;
				bottom: 0;
			}

			p {
				margin-top: -50px;
				font-size: 18vw;
				opacity: 0.7;
				mix-blend-mode: overlay;
			}
		}
	}

	.title {
		text-align: center;
		
		h1 {
			span {
				font-size: 0.6em;
				padding-right: 3px;
				opacity: 0.5;
				
				span.no {
					font-size: 0.55em;
					text-transform: uppercase;
					padding-right: 1px;
				}
			}
		}

		p.category {
			font-size: 20px;
			font-style: italic;
			color: $textLight;
		}

		.types {
			.MuiChip-root {
				margin: 0;
				
				&:nth-child(2) { margin-left: 10px; }
			}
		}
	}

	.stats {
		.base, .lvl50, .lvl100 {
			display: grid;
			row-gap: 5px;

			.statBarContainer {
				display: grid;
				grid-template-columns: 35px 25px auto;
				column-gap: 7px;

				.statLabel { text-align: right; }
				.statNum { text-align: center; }

				.statBar {
					background-color: $gray90;
					margin: 4.5px 0;
					border-radius: 50px;

					.statBarFill {
						height: 100%;
						border-radius: 50px;
						position: relative;
					}
				}

				&.total {
					grid-template-columns: 70px auto;
					margin: 10px 0;

					.statLabel { font-weight: 700; }
					.statNum {
						text-align: left;
						font-weight: 700;
					}
				}
			}
		}

		.lvl50, .lvl100 {
			.statBarContainer { grid-template-columns: 35px 55px auto; }
		}
	}

	.weaknesses {
		display: grid;
		grid-template-columns: repeat(9, 25px);
		gap: 5px;
		align-items: center;
		justify-content: space-around;

		h2 { grid-column: 1 / 10; }

		.weakness{
			height: 100%;
		
			.MuiChip-label {
				display: grid;
				grid-template-rows: 16px 1fr;
				padding: 5px;
				justify-items: center;
				align-items: center;
				font-size: 10px;
				row-gap: 2px;
			}
		}
	}

	.abilities, .breeding {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		column-gap: 20px;
	}

	.breeding h2 { grid-column: 1 / 3; }

	.moreInfo {
		display: grid;
		grid-template-columns: 2fr repeat(2, 1fr);
		column-gap: 20px;

		h2 { grid-column: 1 / 4; }

		.gendRatio {
			display: grid;
			grid-template-columns: 50px auto;
			column-gap: 10px;
			margin-bottom: 15px;

			h3 { grid-column: 1 / 3; }

			.genderPie { grid-row: 2 / 4; }

			p {
				display: grid;
				grid-template-columns: 22px auto;
				column-gap: 2px;
				align-items: center;
			}
		}

		.height, .weight {
			display: grid;
			margin-bottom: 15px;
		}

		.evYield {
			grid-column: 1 / 4;
			margin-bottom: 15px;

			h3 { margin-bottom: 5px; }
		}

		.catchRate, .baseFriendship, .baseExperience, .growthRate {
			grid-column: 1 / 4;
			display: grid;
			grid-template-columns: repeat(2, 1fr);
			column-gap: 20px;
			padding-bottom: 5px;
		}
	}

	#descriptions {
		h3 { margin-top: 15px; }

		a, .MuiLink-root  { color: $text; }

		p, h6 {
			span {
				font-size: 0.75em;
				font-weight: 900;
				text-transform: uppercase;

				span {
					font-size: 0.75em;
					margin-right: 1px;
				}
			}
		}

		p span { margin-right: 3px; }
		h6 {
			font-weight: 900;
			margin-top: 5px;
			
			span { margin-left: 3px; }
		}
	}

	.translations {
		.japanese { font-weight: 500; }
	}
}